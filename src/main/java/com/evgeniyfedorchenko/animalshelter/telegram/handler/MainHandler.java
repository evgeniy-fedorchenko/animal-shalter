package com.evgeniyfedorchenko.animalshelter.telegram.handler;

import com.evgeniyfedorchenko.animalshelter.backend.services.AdopterService;
import com.evgeniyfedorchenko.animalshelter.backend.services.ReportService;
import com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.Callback;
import com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.SimpleApplicable;
import com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.VolunteerChattingEnd;
import com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.report.ReportPart;
import com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.report.SendReportContinue;
import com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.report.SendReportEnd;
import com.evgeniyfedorchenko.animalshelter.telegram.listener.TelegramExecutor;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.ApplicationContext;
import org.springframework.data.util.Pair;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.PartialBotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.send.SendSticker;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.*;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

import java.io.Serializable;
import java.util.Comparator;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

import static com.evgeniyfedorchenko.animalshelter.telegram.handler.MessageData.ENDING_VOLUNTEER_CHAT;
import static com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.report.ReportPart.PHOTO;
import static com.evgeniyfedorchenko.animalshelter.telegram.handler.actions.report.ReportPart.of;


/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–∞. –°–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã
 * –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –ª–æ–≥–∏–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
@Slf4j
@AllArgsConstructor
@Component
public class MainHandler {

    private final ApplicationContext applicationContext;
    private final ReportService reportService;
    private final AdopterService adopterService;
    private final TelegramExecutor telegramExecutor;
    private final SendReportContinue sendReportContinue;

    /**
     * –ú–µ—Ç–æ–¥, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç—ã {@code Command} –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞. –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
     * –≤ ApplicationContext –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ {@link SimpleApplicable} –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ª–æ–≥–∏–∫—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π
     *
     * @param update –û–±—ä–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
     * @return –°–æ–æ–±—â–µ–Ω–∏–µ, –≥–æ—Ç–æ–≤–æ–µ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å –ø–æ–º–æ—â—å—é –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
     */
    public SendMessage handleCommands(Update update) {

        Message message = update.getMessage();

        Map<String, SimpleApplicable> commandsMap = applicationContext.getBeansOfType(SimpleApplicable.class);
        String commandText = message.getText();
        SimpleApplicable simpleApplicable = commandsMap.get(commandText);

        return simpleApplicable == null
                ? new SendMessage(message.getChatId().toString(), "Unknown command: " + commandText)
                : simpleApplicable.apply(String.valueOf(message.getChatId()));
    }


    /**
     * –ú–µ—Ç–æ–¥, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç—ã {@code Callback} –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞. –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
     * –≤ ApplicationContext –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ {@link Callback} –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ª–æ–≥–∏–∫—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π
     *
     * @param update –û–±—ä–µ–∫—Ç, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
     * @return –≠—Ç–æ—Ç –æ–±—ä–µ–∫—Ç —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –¥—Ä—É–≥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
     * {@code this.callbackQuery.getMessage().getMessageId()}
     */
    public BotApiMethod<? extends Serializable> handleCallbacks(Update update) {

        CallbackQuery callbackQuery = update.getCallbackQuery();
        String chatId = String.valueOf(callbackQuery.getMessage().getChatId());

        // TODO 16.06.2024 18:21 - –ø–æ—á–µ–º—É –Ω–µ –¥–æ—Å—Ç–∞—é –±–∏–Ω —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç?
        if (callbackQuery.getData().equals("VolunteerChattingEnd")) {
            return ((VolunteerChattingEnd) applicationContext.getBean("VolunteerChattingEnd")).apply(chatId);
        }

        Map<String, Callback> callbacksMap = applicationContext.getBeansOfType(Callback.class);
        Callback callback = callbacksMap.get(callbackQuery.getData());

        return callback == null
                ? applyUnknownUserAction(update)
                : callback.apply(chatId, callbackQuery.getMessage().getMessageId());
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –æ—Ç —é–∑–µ—Ä–∞ - –æ—à–∏–±–æ—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –∞ —Ç–∞–∫ –∂–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö
     * –∫–æ–ª–±–µ–∫–æ–≤. –õ–æ–≥–∏–∫–∞ –º–µ—Ç–æ–¥–∞ —Å–≤–æ–¥–∏—Ç—Å—è –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏–ª–∏ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –æ—à–∏–±–æ—á–Ω–æ–≥–æ, –≤ —Å–ª—É—á–∞–µ
     * –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –∫–æ–ª–±–µ–∫–∞ (—Ä–µ–¥–∫–æ)).
     *
     * @param update –ù–µ–ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ChatId. –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –≤–µ—Å—å –æ–±—ä–µ–∫—Ç {@code Update update},
     *               –∞ –Ω–µ —Ç–æ–ª—å–∫–æ {@code Long chatId}, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–≥–æ –ø–æ—Ç–æ–º–∫–∞
     *               {@code BotApiMethod<? extends Serializable>} –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
     * @return –æ–±—ä–µ–∫—Ç {@code} BotApiMethod<? extends Serializable>, –ø–æ —Ñ–∞–∫—Ç—É —Å—É–∂–µ–Ω—ã–π –¥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
     * {@code SendMessage} –∏–ª–∏ {@code EditMessageText}, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∂–∏–¥–∞–Ω–∏–π –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –º–µ—Ç–æ–¥–∞
     */
    public BotApiMethod<? extends Serializable> applyUnknownUserAction(Update update) {
        String text = """
                –Ø –ø—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –Ω–æ –∫–∞–∂–µ—Ç—Å—è, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é \uD83E\uDD72
                –ö–∞–∫ –Ω–∞—Å—á–µ—Ç —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?)
                üëâ /start üëà""";

        if (update.hasCallbackQuery()) {

            CallbackQuery callbackQuery = update.getCallbackQuery();
            String chatId = String.valueOf(callbackQuery.getMessage().getChatId());

            EditMessageText editMessageText = new EditMessageText(text);
            editMessageText.setChatId(chatId);
            editMessageText.setMessageId(callbackQuery.getMessage().getMessageId());
            return editMessageText;

        } else {
            String chatId = String.valueOf(update.getMessage().getChatId());
            return new SendMessage(chatId, text);
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–π—Ç–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω—É–∂–Ω–æ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞) —Å —Å–µ—Ä–≤–µ—Ä–æ–≤
     * —Ç–µ–ª–µ–≥—Ä–∞–º. –ú–µ—Ç–æ–¥ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–∞–º—É—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è (–æ–±—ã—á–Ω–æ —Ç–µ–ª–µ–≥—Ä–∞–º –¥–∞–µ—Ç —Ç—Ä–∏ –∫–æ–ø–∏–∏ –≤
     * —Ä–∞–∑–Ω–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –Ω–∞ –≤—ã–±–æ—Ä)
     *
     * @param message –°–æ–æ–±—â–µ–Ω–∏–µ, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ—Å—Ç–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
     * @return –æ–±—ä–µ–∫—Ç {@link org.springframework.data.util.Pair}, –≥–¥–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –±–∞–π—Ç—ã
     * —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞ –≤—Ç–æ—Ä–æ–π {@link MediaType} —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
     */
    public Pair<byte[], MediaType> getPhotoData(Message message) {

        PhotoSize largestPhoto = message.getPhoto().stream()
                .max(Comparator.comparing(PhotoSize::getFileSize))
                .orElseThrow();

        return telegramExecutor.getPhotoDataPair(largestPhoto).orElseThrow();
    }

    /**
     * –í —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞ –∏ —é–∑–µ—Ä–∞ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —é–∑–µ—Ä–æ–º —Ç–∞–∫–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.
     * –ü—Ä–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –æ–±—â–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å—é–¥–∞ –≤–º–µ—Å—Ç–µ
     * —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º (<b>chatId</b>) –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞–∑–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø–æ—Ç–æ–º–∫–∞
     * {@code PartialBotApiMethod<Message>}, –≥–æ—Ç–æ–≤–æ–≥–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –ø–æ–º–æ—â—å—é —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞.
     * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–æ–≤: {@code SendSticker}, {@code SendPhoto} –∏ {@code SendMessage}
     *
     * @param message        –°–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –±–æ—Ç–æ–º –æ—Ç –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –∏ –ø–æ–¥–ª–µ–∂–∞—â–µ–µ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω–µ
     * @param chatIdToAnswer –æ–±—ä–µ–∫—Ç {@code String chatId} - —Ç–µ–ª–µ–≥—Ä–∞–º-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–∂–∏–¥–∞—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω—ã),
     *                       —Ç–æ –µ—Å—Ç—å —Ç–æ–π, –∫—Ç–æ –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @return –æ–±—ä–µ–∫—Ç {@code PartialBotApiMethod<Message>} –ø–æ —Ñ–∞–∫—Ç—É —Å—É–∂–µ–Ω—ã–π –¥–æ {@code SendSticker}, {@code SendPhoto}
     * –∏–ª–∏ {@code SendMessage}
     */
    public PartialBotApiMethod<Message> chattingWithVolunteerProcess(Message message, String chatIdToAnswer) {

        InlineKeyboardMarkup keyboardMarkup = MessageUtils.getMarkupWithOneLinesButtons(
                Map.of(ENDING_VOLUNTEER_CHAT.getAnswer(), ENDING_VOLUNTEER_CHAT.getCallbackData()));

        return switch (message) {
            case Message inMess when inMess.hasSticker() -> {
                SendSticker sticker = new SendSticker(chatIdToAnswer, new InputFile(inMess.getSticker().getFileId()));
                sticker.setReplyMarkup(keyboardMarkup);
                yield sticker;
            }
            case Message inMess when inMess.hasPhoto() -> {
                Optional<PhotoSize> largestPhoto = message.getPhoto().stream()
                        .max(Comparator.comparing(PhotoSize::getFileSize));

                SendPhoto photo =
                        new SendPhoto(chatIdToAnswer, new InputFile(largestPhoto.orElseThrow().getFileId()));
                photo.setCaption(message.getCaption());
                photo.setReplyMarkup(keyboardMarkup);
                yield photo;
            }
            default -> {
                SendMessage sendMessage = new SendMessage(chatIdToAnswer, message.getText());
                sendMessage.setReplyMarkup(keyboardMarkup);
                yield sendMessage;
            }
        };
    }

    /**
     * –ú–µ—Ç–æ–¥, –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—â–∏–π –ª–æ–≥–∏–∫—É –ø—Ä–æ—Ü–µ—Å—Å–∏–Ω–≥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç {@link Message},
     * –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç —é–∑–µ—Ä–∞ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ñ–ª–∞–≥–∞ {@code Long specialBehaviorId} —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —á–∞—Å—Ç—å –æ—Ç—á–µ—Ç–∞, –∫–æ—Ç–æ—Ä—É—é
     * –æ—Ç—Å—ã–ª–∞–µ—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥, –≥–¥–µ —ç—Ç–∞ —á–∞—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç—á–µ—Ç.
     *
     * @param message           –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —á–∞—Å—Ç—å –æ—Ç—á–µ—Ç–∞
     * @param specialBehaviorId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞, –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≥–æ,
     *                          –∫–∞–∫—É—é –∏–º–µ–Ω–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —ç—Ç–∞ —á–∞—Å—Ç—å –æ—Ç—á–µ—Ç–∞
     * @return –û–±—ä–µ–∫—Ç {@code SendMessage} –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –≥–æ–≤–æ—Ä—è—â–∏–π,
     * —Å–∫–æ–ª—å–∫–æ –µ—â–µ (–∏ –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ) —á–∞—Å—Ç–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏—Å–ª–∞—Ç—å. –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤—Å–µ
     * —á–∞—Å—Ç—å –æ—Ç—á–µ—Ç–∞ –ø—Ä–∏—Å–ª–∞–Ω—ã
     * @see ReportPart
     * @see SendReportContinue
     * @see SendReportEnd
     * @see ReportService#acceptReportPart(ReportPart, byte[], String, MediaType)
     */
    public SendMessage sendReportProcess(Message message, String specialBehaviorId) {

        String chatId = String.valueOf(message.getChatId());
        if (message.hasText() && message.getText().length() > 500) {
            String tooLongMess = """
                    –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –µ–≥–æ
                    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–ª–∏–Ω–∞ - 500 —Å–∏–º–≤–æ–ª–æ–≤, –∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç %s —Å–∏–º–≤–æ–ª–æ–≤
                    """.formatted(message.getText().length());
            return new SendMessage(chatId, tooLongMess);
        }

        ReportPart reportPart = of(specialBehaviorId);
        String suggestionToAdding = null;
        byte[] messageData;
        MediaType mediaType;

        /* –î–ª—è –æ–±–ª–µ–≥—á–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–¥–∏–º –∞–¥–æ–ø—Ç–µ—Ä–∞ —Å –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–º
           –∂–∏–≤–æ—Ç–Ω—ã–º, –µ—Å–ª–∏ –æ—Ç—á–µ—Ç –∑–∞—Ö–æ—á–µ—Ç –ø—Ä–∏—Å–ª–∞—Ç—å –Ω–µ–¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —é–∑–µ—Ä. –ê —Ç–∞–∫-—Ç–æ –∞–¥–æ–ø—Ç–µ—Ä–æ–≤ –¥–æ–ª–∂–Ω—ã –¥–æ–±–∞–≤–ª—è—Ç—å –≤–æ–ª–æ–Ω—Ç–µ—Ä—ã
           —á–µ—Ä–µ–∑ API –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∏–º –∂–∏–≤–æ—Ç–Ω—ã—Ö —Ç–∞–º –∂–µ */
        if (!adopterService.existAdopterWithChatId(chatId)) {
            adopterService.addTrialAdopter(message);
            suggestionToAdding = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è —è –µ—â–µ –Ω–µ –∑–Ω–∞—é –í–∞—Å, –∫–∞–∫ —É—Å—ã–Ω–æ–≤–∏—Ç–µ–ª—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º, —á—Ç–æ–±—ã –æ–Ω –¥–æ–±–∞–≤–∏–ª –≤–∞—Å! –ù–æ –ø–æ–∫–∞ —á—Ç–æ —Å–¥–µ–ª–∞–µ–º –≤–∏–¥, —á—Ç–æ —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ—Ç, —è –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ù–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞";
        }

       /* –ü–µ—Ä–µ–¥–∞–µ–º –±–∞–π—Ç—ã —Ñ–æ—Ç–∫–∏ –≤ —Ç–æ–π –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (messageData), –≥–¥–µ –ø–µ—Ä–µ–¥–∞–µ–º –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è. –ê content-type
          –ø–µ—Ä–µ–¥–∞–µ–º –≤ @Nullable-–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (mediaType). –ù–µ —Å–∞–º–æ–µ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –Ω–æ –∑–∞—Ç–æ —Å–∞–º–æ–µ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–µ. –í–º–µ—Å—Ç–æ
          —Ç–æ–≥–æ, —á—Ç–æ–± –∑–∞–≤–æ–¥–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —á–∏—Å—Ç–æ –ø–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–∫–∏ + –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ - –≤—ã—Ö–æ–¥–∏—Ç –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ */
        if (Objects.equals(reportPart, PHOTO)) {

            Pair<byte[], MediaType> photoData = getPhotoData(message);
            messageData = photoData.getFirst();
            mediaType = photoData.getSecond();
        } else {
            mediaType = null;
            messageData = message.getText().getBytes();
        }
        reportService.acceptReportPart(reportPart, messageData, chatId, mediaType);
        SendMessage applied = sendReportContinue.apply(chatId);

        if (suggestionToAdding != null) {
            applied.setText(suggestionToAdding + "\n" + "_".repeat(30) + "\n\n" + applied.getText());
        }
        return applied;
    }
}
